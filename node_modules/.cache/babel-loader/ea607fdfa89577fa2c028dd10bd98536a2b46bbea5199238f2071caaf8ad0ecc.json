{"ast":null,"code":"import{req}from\"../../axiosReqMethods\";import{fetchStart,fetchFailed,fetchSuccess,reserError,updateUserRedux}from\"../UseersComponentRedux\";import{setError}from'../MessageRedux';export const fetchUsers=async(dispatch,querie)=>{dispatch(fetchStart());try{const users=await req.get(`/api/users/allinfo?${new URLSearchParams(querie)}`);dispatch(fetchSuccess(users===null||users===void 0?void 0:users.data));}catch(error){var _error$response;dispatch(fetchFailed((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data));setTimeout(()=>{dispatch(reserError());},5000);}};export const updateUser=async(dispatch,userID,data)=>{try{const res=await req.put(`/api/users/${userID}`,data);dispatch(setError(\"user updated successfully\"));dispatch(updateUserRedux(res===null||res===void 0?void 0:res.data));return res;}catch(err){dispatch(setError(\"user updated successfully\"));console.log(`error is ${err}`);}};","map":{"version":3,"names":["req","fetchStart","fetchFailed","fetchSuccess","reserError","updateUserRedux","setError","fetchUsers","dispatch","querie","users","get","URLSearchParams","data","error","_error$response","response","setTimeout","updateUser","userID","res","put","err","console","log"],"sources":["M:/first-react/panara/admin/src/redux/apiCalls/users.js"],"sourcesContent":["import { req } from \"../../axiosReqMethods\";\r\nimport {\r\n  fetchStart,\r\n  fetchFailed,\r\n  fetchSuccess,\r\n  reserError,\r\n  updateUserRedux,\r\n} from \"../UseersComponentRedux\";\r\nimport { setError } from '../MessageRedux'\r\n\r\n\r\n\r\nexport const fetchUsers = async (dispatch, querie) => {\r\n  dispatch(fetchStart());\r\n  try {  \r\n    const users = await req.get(`/api/users/allinfo?${new URLSearchParams(querie)}`);\r\n    dispatch(fetchSuccess(users?.data));\r\n  } catch (error) { \r\n      dispatch(fetchFailed(error.response?.data));\r\n\r\n    setTimeout(() => {\r\n      dispatch(reserError());\r\n    }, 5000);\r\n  }\r\n};\r\n\r\nexport const updateUser = async (dispatch, userID, data) => {\r\n  try {\r\n    const res = await req.put(`/api/users/${userID}`, data);\r\n    dispatch(setError(\"user updated successfully\"))\r\n    dispatch(updateUserRedux(res?.data))\r\n    return res;\r\n  } catch (err) {\r\n    dispatch(setError(\"user updated successfully\"))\r\n    console.log(`error is ${err}`);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAASA,GAAG,KAAQ,uBAAuB,CAC3C,OACEC,UAAU,CACVC,WAAW,CACXC,YAAY,CACZC,UAAU,CACVC,eAAe,KACV,yBAAyB,CAChC,OAASC,QAAQ,KAAQ,iBAAiB,CAI1C,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,MAAM,GAAK,CACpDD,QAAQ,CAACP,UAAU,CAAC,CAAC,CAAC,CACtB,GAAI,CACF,KAAM,CAAAS,KAAK,CAAG,KAAM,CAAAV,GAAG,CAACW,GAAG,CAAC,sBAAsB,GAAI,CAAAC,eAAe,CAACH,MAAM,CAAC,EAAE,CAAC,CAChFD,QAAQ,CAACL,YAAY,CAACO,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEG,IAAI,CAAC,CAAC,CACrC,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CACZP,QAAQ,CAACN,WAAW,EAAAa,eAAA,CAACD,KAAK,CAACE,QAAQ,UAAAD,eAAA,iBAAdA,eAAA,CAAgBF,IAAI,CAAC,CAAC,CAE7CI,UAAU,CAAC,IAAM,CACfT,QAAQ,CAACJ,UAAU,CAAC,CAAC,CAAC,CACxB,CAAC,CAAE,IAAI,CAAC,CACV,CACF,CAAC,CAED,MAAO,MAAM,CAAAc,UAAU,CAAG,KAAAA,CAAOV,QAAQ,CAAEW,MAAM,CAAEN,IAAI,GAAK,CAC1D,GAAI,CACF,KAAM,CAAAO,GAAG,CAAG,KAAM,CAAApB,GAAG,CAACqB,GAAG,CAAC,cAAcF,MAAM,EAAE,CAAEN,IAAI,CAAC,CACvDL,QAAQ,CAACF,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAC/CE,QAAQ,CAACH,eAAe,CAACe,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEP,IAAI,CAAC,CAAC,CACpC,MAAO,CAAAO,GAAG,CACZ,CAAE,MAAOE,GAAG,CAAE,CACZd,QAAQ,CAACF,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAC/CiB,OAAO,CAACC,GAAG,CAAC,YAAYF,GAAG,EAAE,CAAC,CAChC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}