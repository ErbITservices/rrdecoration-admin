{"ast":null,"code":"import{publicreq}from\"../../axiosReqMethods\";import{loginFailed,start,loginSuccess}from\"../userRedux\";import{setError}from'../MessageRedux';export const login=async(dispatch,user)=>{const{email,password}=user;dispatch(start());try{const res=await publicreq.post(\"api/auth/login\",{email,password,forAdmin:true});dispatch(loginSuccess(res===null||res===void 0?void 0:res.data));}catch(error){var _error$response;dispatch(loginFailed());dispatch(setError((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data.message));}};","map":{"version":3,"names":["publicreq","loginFailed","start","loginSuccess","setError","login","dispatch","user","email","password","res","post","forAdmin","data","error","_error$response","response","message"],"sources":["M:/first-react/panara/admin/src/redux/apiCalls/auth.js"],"sourcesContent":["import { publicreq } from \"../../axiosReqMethods\";\r\nimport { loginFailed, start, loginSuccess } from \"../userRedux\";\r\nimport { setError } from '../MessageRedux'\r\n\r\n\r\nexport const login = async (dispatch, user) => {\r\n    const {email, password} = user;\r\n    dispatch(start());\r\n    try {\r\n        const res = await publicreq.post(\"api/auth/login\", {email, password, forAdmin: true});\r\n        dispatch(loginSuccess(res?.data));\r\n        \r\n    } catch (error) {\r\n        dispatch(loginFailed());\r\n        dispatch(setError(error.response?.data.message))\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,uBAAuB,CACjD,OAASC,WAAW,CAAEC,KAAK,CAAEC,YAAY,KAAQ,cAAc,CAC/D,OAASC,QAAQ,KAAQ,iBAAiB,CAG1C,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,IAAI,GAAK,CAC3C,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGF,IAAI,CAC9BD,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,CACjB,GAAI,CACA,KAAM,CAAAQ,GAAG,CAAG,KAAM,CAAAV,SAAS,CAACW,IAAI,CAAC,gBAAgB,CAAE,CAACH,KAAK,CAAEC,QAAQ,CAAEG,QAAQ,CAAE,IAAI,CAAC,CAAC,CACrFN,QAAQ,CAACH,YAAY,CAACO,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEG,IAAI,CAAC,CAAC,CAErC,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CACZT,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAC,CACvBK,QAAQ,CAACF,QAAQ,EAAAW,eAAA,CAACD,KAAK,CAACE,QAAQ,UAAAD,eAAA,iBAAdA,eAAA,CAAgBF,IAAI,CAACI,OAAO,CAAC,CAAC,CACpD,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}