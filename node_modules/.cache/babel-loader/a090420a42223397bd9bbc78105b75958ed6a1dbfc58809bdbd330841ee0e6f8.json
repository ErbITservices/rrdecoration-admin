{"ast":null,"code":"import{req}from\"../../axiosReqMethods\";import{editProduct,addProducts}from\"../Products\";import{setError}from\"../MessageRedux\";export const editProductapi=async(dispatch,product,setIsOpen)=>{try{const res=await req.put(`/api/products/${product._id}`,product);dispatch(editProduct(res===null||res===void 0?void 0:res.data));dispatch(setError(\"product updated successfully\"));setIsOpen(false);}catch(error){dispatch(setError(error.response.data.message));console.log(error);}};export const addProductapi=async(dispatch,product,setIsOpen)=>{try{console.log(\"mihir1\");const res=await req.post(`/api/products`,product);console.log(\"mihir2\");dispatch(addProducts(res===null||res===void 0?void 0:res.data));dispatch(setError(\"product Added successfully\"));setIsOpen(false);}catch(error){dispatch(setError(error.response.data.message));console.log(error);}};","map":{"version":3,"names":["req","editProduct","addProducts","setError","editProductapi","dispatch","product","setIsOpen","res","put","_id","data","error","response","message","console","log","addProductapi","post"],"sources":["M:/first-react/panara/admin/src/redux/apiCalls/productsApis.js"],"sourcesContent":["import { req } from \"../../axiosReqMethods\";\r\nimport { editProduct, addProducts } from \"../Products\";\r\nimport { setError } from \"../MessageRedux\"\r\n\r\n\r\nexport const editProductapi = async (dispatch, product, setIsOpen) => {\r\n    try {\r\n        const res = await req.put(`/api/products/${product._id}`, product);\r\n        dispatch(editProduct(res?.data))\r\n        dispatch(setError(\"product updated successfully\"))\r\n        setIsOpen(false)\r\n    } catch (error) {\r\n        dispatch(setError(error.response.data.message))\r\n        console.log(error)\r\n    }\r\n}\r\nexport const addProductapi = async (dispatch, product, setIsOpen) => {\r\n    try {\r\n        console.log(\"mihir1\");\r\n        \r\n        const res = await req.post(`/api/products`, product);\r\n        \r\n        console.log(\"mihir2\");\r\n        dispatch(addProducts(res?.data));      \r\n        dispatch(setError(\"product Added successfully\"))\r\n        setIsOpen(false)\r\n    } catch (error) {\r\n        dispatch(setError(error.response.data.message))\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,OAASA,GAAG,KAAQ,uBAAuB,CAC3C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,QAAQ,KAAQ,iBAAiB,CAG1C,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,OAAO,CAAEC,SAAS,GAAK,CAClE,GAAI,CACA,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAR,GAAG,CAACS,GAAG,CAAC,iBAAiBH,OAAO,CAACI,GAAG,EAAE,CAAEJ,OAAO,CAAC,CAClED,QAAQ,CAACJ,WAAW,CAACO,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEG,IAAI,CAAC,CAAC,CAChCN,QAAQ,CAACF,QAAQ,CAAC,8BAA8B,CAAC,CAAC,CAClDI,SAAS,CAAC,KAAK,CAAC,CACpB,CAAE,MAAOK,KAAK,CAAE,CACZP,QAAQ,CAACF,QAAQ,CAACS,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAC/CC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC,CACtB,CACJ,CAAC,CACD,MAAO,MAAM,CAAAK,aAAa,CAAG,KAAAA,CAAOZ,QAAQ,CAAEC,OAAO,CAAEC,SAAS,GAAK,CACjE,GAAI,CACAQ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAErB,KAAM,CAAAR,GAAG,CAAG,KAAM,CAAAR,GAAG,CAACkB,IAAI,CAAC,eAAe,CAAEZ,OAAO,CAAC,CAEpDS,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACrBX,QAAQ,CAACH,WAAW,CAACM,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEG,IAAI,CAAC,CAAC,CAChCN,QAAQ,CAACF,QAAQ,CAAC,4BAA4B,CAAC,CAAC,CAChDI,SAAS,CAAC,KAAK,CAAC,CACpB,CAAE,MAAOK,KAAK,CAAE,CACZP,QAAQ,CAACF,QAAQ,CAACS,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAC/CC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC,CACtB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}