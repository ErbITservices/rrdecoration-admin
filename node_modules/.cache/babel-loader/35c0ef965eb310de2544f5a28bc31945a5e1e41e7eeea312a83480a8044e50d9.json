{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\nconst initialState = {\n  error: null,\n  id: null\n};\nconst errorsSlice = createSlice({\n  name: 'errors',\n  initialState,\n  reducers: {\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.id = uuid();\n    },\n    clearError: state => {\n      state.error = null;\n      state.id = null;\n    }\n  }\n});\nexport const {\n  setError,\n  clearError\n} = errorsSlice.actions;\nexport default errorsSlice.reducer;","map":{"version":3,"names":["createSlice","v4","uuid","initialState","error","id","errorsSlice","name","reducers","setError","state","action","payload","clearError","actions","reducer"],"sources":["C:/Users/Mihir k/first-react/panara/admin/src/redux/MessageRedux.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst initialState = {\r\n    error: null,\r\n    id: null\r\n}\r\n\r\nconst errorsSlice = createSlice({\r\n    name: 'errors',\r\n    initialState,\r\n    reducers: {\r\n        setError: (state, action) => {\r\n            state.error = action.payload;\r\n            state.id = uuid();\r\n        },\r\n        clearError: (state) => {\r\n            state.error = null;\r\n            state.id = null;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setError, clearError } = errorsSlice.actions;\r\nexport default errorsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAEjC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,IAAI;EACXC,EAAE,EAAE;AACR,CAAC;AAED,MAAMC,WAAW,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,QAAQ;EACdJ,YAAY;EACZK,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACL,EAAE,GAAGH,IAAI,CAAC,CAAC;IACrB,CAAC;IACDW,UAAU,EAAGH,KAAK,IAAK;MACnBA,KAAK,CAACN,KAAK,GAAG,IAAI;MAClBM,KAAK,CAACL,EAAE,GAAG,IAAI;IACnB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,QAAQ;EAAEI;AAAW,CAAC,GAAGP,WAAW,CAACQ,OAAO;AAC3D,eAAeR,WAAW,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}