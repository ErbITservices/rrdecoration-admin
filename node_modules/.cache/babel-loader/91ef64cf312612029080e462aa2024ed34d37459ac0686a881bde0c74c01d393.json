{"ast":null,"code":"var _jsxFileName = \"M:\\\\first-react\\\\rrdecoration\\\\admin\\\\src\\\\components\\\\Charts\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto'; // this is required to use charts\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  box-sizing: border-box;\n  flex: 1;\n  background-color: white;\n  border: 1px solid #E5E7EB;\n  border-radius: 10px;\n  padding: 1rem;\n  margin: 0;\n`;\n_c = Container;\nconst Title = styled.h2`\n  font-size: 1rem;\n`;\n_c2 = Title;\nconst BarChart = ({\n  data,\n  color,\n  title\n}) => {\n  _s();\n  console.log(data);\n  const [chartData, setChartData] = useState({\n    labels: data.map(d => d._id),\n    datasets: [{\n      label: \"Purchase Count\",\n      data: data.map(d => d.count),\n      backgroundColor: color ? data.map(d => d._id) : ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)'],\n      hoverBorderWidth: 1,\n      hoverBorderColor: '#000'\n    }]\n  });\n  const options = {\n    maintainAspectRatio: false // Don't maintain w/h ratio\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"gX5Hatv9qJAHxcff21wIRXWSfKw=\");\n_c3 = BarChart;\nexport default BarChart;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","styled","jsxDEV","_jsxDEV","Container","div","_c","Title","h2","_c2","BarChart","data","color","title","_s","console","log","chartData","setChartData","labels","map","d","_id","datasets","label","count","backgroundColor","hoverBorderWidth","hoverBorderColor","options","maintainAspectRatio","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["M:/first-react/rrdecoration/admin/src/components/Charts/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto' // this is required to use charts\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n  background-color: white;\r\n  border: 1px solid #E5E7EB;\r\n  border-radius: 10px;\r\n  padding: 1rem;\r\n  margin: 0;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1rem;\r\n`\r\n\r\n\r\nconst BarChart = ({data, color, title}) => {\r\n  console.log(data)\r\n  const [chartData, setChartData] = useState({\r\n    labels: data.map(d => d._id),\r\n    datasets: [{\r\n      label: \"Purchase Count\",\r\n      data: data.map(d => d.count),\r\n      backgroundColor: (color ? data.map(d => d._id) :\r\n        [\r\n          'rgba(255, 99, 132, 0.6)',\r\n          'rgba(54, 162, 235, 0.6)',\r\n          'rgba(255, 206, 86, 0.6)',\r\n          'rgba(75, 192, 192, 0.6)',\r\n          'rgba(153, 102, 255, 0.6)'\r\n        ]),\r\n      hoverBorderWidth: 1,\r\n      hoverBorderColor: '#000'\r\n    }]\r\n  });\r\n\r\n\r\n  const options = {\r\n    maintainAspectRatio: false\t// Don't maintain w/h ratio\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Bar data={chartData} />    \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,QAAQ,eAAe,EAAC;AACjD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GARKF,SAAS;AAUf,MAAMG,KAAK,GAAGN,MAAM,CAACO,EAAE;AACvB;AACA,CAAC;AAAAC,GAAA,GAFKF,KAAK;AAKX,MAAMG,QAAQ,GAAGA,CAAC;EAACC,IAAI;EAAEC,KAAK;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzCC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EACjB,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC;IACzCuB,MAAM,EAAER,IAAI,CAACS,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC;IAC5BC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,gBAAgB;MACvBb,IAAI,EAAEA,IAAI,CAACS,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,KAAK,CAAC;MAC5BC,eAAe,EAAGd,KAAK,GAAGD,IAAI,CAACS,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC,GAC5C,CACE,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,CAC1B;MACJK,gBAAgB,EAAE,CAAC;MACnBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC,CAAC;EAGF,MAAMC,OAAO,GAAG;IACdC,mBAAmB,EAAE,KAAK,CAAC;EAC7B,CAAC;EAED,oBACE3B,OAAA,CAACC,SAAS;IAAA2B,QAAA,gBACR5B,OAAA,CAACI,KAAK;MAAAwB,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtBhC,OAAA,CAACL,GAAG;MAACa,IAAI,EAAEM;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEhB,CAAC;AAACrB,EAAA,CA/BIJ,QAAQ;AAAA0B,GAAA,GAAR1B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}