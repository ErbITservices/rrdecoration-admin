{"ast":null,"code":"import { req } from \"../../axiosReqMethods\";\nimport { fetchStart, fetchFailed, fetchSuccess, reserError, updateUserRedux } from \"../UseersComponentRedux\";\nimport { setError } from '../MessageRedux';\nexport const fetchUsers = async (dispatch, querie) => {\n  dispatch(fetchStart());\n  try {\n    const users = await req.get(`/api/users/allinfo?${new URLSearchParams(querie)}`);\n    dispatch(fetchSuccess(users === null || users === void 0 ? void 0 : users.data));\n  } catch (error) {\n    var _error$response;\n    dispatch(fetchFailed((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data));\n    setTimeout(() => {\n      dispatch(reserError());\n    }, 5000);\n  }\n};\nexport const updateUser = async (dispatch, userID, data) => {\n  try {\n    const res = await req.put(`/api/users/${userID}`, data);\n    dispatch(setError(\"user updated successfully\"));\n    dispatch(updateUserRedux(res === null || res === void 0 ? void 0 : res.data));\n    return res;\n  } catch (err) {\n    dispatch(setError(\"user updated successfully\"));\n    console.log(`error is ${err}`);\n  }\n};","map":{"version":3,"names":["req","fetchStart","fetchFailed","fetchSuccess","reserError","updateUserRedux","setError","fetchUsers","dispatch","querie","users","get","URLSearchParams","data","error","_error$response","response","setTimeout","updateUser","userID","res","put","err","console","log"],"sources":["M:/first-react/rrdecoration/admin/src/redux/apiCalls/users.js"],"sourcesContent":["import { req } from \"../../axiosReqMethods\";\r\nimport {\r\n  fetchStart,\r\n  fetchFailed,\r\n  fetchSuccess,\r\n  reserError,\r\n  updateUserRedux,\r\n} from \"../UseersComponentRedux\";\r\nimport { setError } from '../MessageRedux'\r\n\r\n\r\n\r\nexport const fetchUsers = async (dispatch, querie) => {\r\n  dispatch(fetchStart());\r\n  try {  \r\n    const users = await req.get(`/api/users/allinfo?${new URLSearchParams(querie)}`);\r\n    dispatch(fetchSuccess(users?.data));\r\n  } catch (error) { \r\n      dispatch(fetchFailed(error.response?.data));\r\n\r\n    setTimeout(() => {\r\n      dispatch(reserError());\r\n    }, 5000);\r\n  }\r\n};\r\n\r\nexport const updateUser = async (dispatch, userID, data) => {\r\n  try {\r\n    const res = await req.put(`/api/users/${userID}`, data);\r\n    dispatch(setError(\"user updated successfully\"))\r\n    dispatch(updateUserRedux(res?.data))\r\n    return res;\r\n  } catch (err) {\r\n    dispatch(setError(\"user updated successfully\"))\r\n    console.log(`error is ${err}`);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,uBAAuB;AAC3C,SACEC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,eAAe,QACV,yBAAyB;AAChC,SAASC,QAAQ,QAAQ,iBAAiB;AAI1C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;EACpDD,QAAQ,CAACP,UAAU,CAAC,CAAC,CAAC;EACtB,IAAI;IACF,MAAMS,KAAK,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,sBAAsB,IAAIC,eAAe,CAACH,MAAM,CAAC,EAAE,CAAC;IAChFD,QAAQ,CAACL,YAAY,CAACO,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,IAAI,CAAC,CAAC;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZP,QAAQ,CAACN,WAAW,EAAAa,eAAA,GAACD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,CAAC,CAAC;IAE7CI,UAAU,CAAC,MAAM;MACfT,QAAQ,CAACJ,UAAU,CAAC,CAAC,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;EACV;AACF,CAAC;AAED,OAAO,MAAMc,UAAU,GAAG,MAAAA,CAAOV,QAAQ,EAAEW,MAAM,EAAEN,IAAI,KAAK;EAC1D,IAAI;IACF,MAAMO,GAAG,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,cAAcF,MAAM,EAAE,EAAEN,IAAI,CAAC;IACvDL,QAAQ,CAACF,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IAC/CE,QAAQ,CAACH,eAAe,CAACe,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEP,IAAI,CAAC,CAAC;IACpC,OAAOO,GAAG;EACZ,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZd,QAAQ,CAACF,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IAC/CiB,OAAO,CAACC,GAAG,CAAC,YAAYF,GAAG,EAAE,CAAC;EAChC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}