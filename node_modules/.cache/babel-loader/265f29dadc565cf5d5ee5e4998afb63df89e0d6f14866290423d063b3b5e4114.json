{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    fetchedUsers: [],\n    isFetching: false,\n    isError: false,\n    error: null\n  },\n  reducers: {\n    fetchStart: state => {\n      state.isError = false;\n      state.isFetching = true;\n      state.error = null;\n    },\n    fetchSuccess: (state, action) => {\n      state.isFetching = false;\n      state.fetchedUsers = action.payload;\n      state.isError = false;\n      state.error = null;\n    },\n    fetchFailed: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = null;\n      state.error = action.payload;\n      state.isError = true;\n    },\n    reserError: state => {\n      state.isError = false;\n      state.error = null;\n    },\n    clearUsers: state => {\n      state.fetchedUsers = [];\n      state.isFetching = false;\n      state.isError = false;\n      state.error = null;\n    },\n    updateUserRedux: (state, action) => {\n      console.log(\"update user redux\");\n      state.fetchedUsers.forEach((value, index) => {\n        if (value._id === action.payload._id) {\n          state.fetchedUsers[index] = action.payload;\n        }\n      });\n    }\n  }\n});\nexport const {\n  fetchStart,\n  fetchFailed,\n  fetchSuccess,\n  reserError,\n  clearUsers,\n  updateUserRedux\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","fetchedUsers","isFetching","isError","error","reducers","fetchStart","state","fetchSuccess","action","payload","fetchFailed","currentUser","reserError","clearUsers","updateUserRedux","console","log","forEach","value","index","_id","actions","reducer"],"sources":["C:/Users/Mihir k/first-react/panara/admin/src/redux/UseersComponentRedux.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        fetchedUsers: [],\r\n        isFetching: false,\r\n        isError: false,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n \r\n        fetchStart: (state) => {\r\n            state.isError = false;\r\n            state.isFetching = true;  \r\n            state.error = null; \r\n        },\r\n        fetchSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.fetchedUsers = action.payload;\r\n            state.isError = false;\r\n            state.error = null;\r\n\r\n        },\r\n        fetchFailed: (state, action) => {\r\n            state.isFetching = false;\r\n            state.currentUser = null;\r\n            state.error = action.payload;\r\n            state.isError = true;\r\n            \r\n        },\r\n        reserError: (state) => {\r\n            state.isError = false;\r\n            state.error = null;\r\n        },\r\n        clearUsers: (state) => {\r\n            state.fetchedUsers = [];\r\n            state.isFetching = false;\r\n            state.isError = false;\r\n            state.error = null;\r\n        },\r\n\r\n        updateUserRedux : (state, action) => {\r\n            console.log(\"update user redux\")\r\n            state.fetchedUsers.forEach((value, index) => {\r\n                if (value._id === action.payload._id) {\r\n                    state.fetchedUsers[index] = action.payload;\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nexport const {fetchStart, fetchFailed, fetchSuccess, reserError, clearUsers, updateUserRedux} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,KAAK;IACjBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IAENC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACL,UAAU,GAAG,IAAI;MACvBK,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC;IACDI,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACN,YAAY,GAAGQ,MAAM,CAACC,OAAO;MACnCH,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAG,IAAI;IAEtB,CAAC;IACDO,WAAW,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACK,WAAW,GAAG,IAAI;MACxBL,KAAK,CAACH,KAAK,GAAGK,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACJ,OAAO,GAAG,IAAI;IAExB,CAAC;IACDU,UAAU,EAAGN,KAAK,IAAK;MACnBA,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC;IACDU,UAAU,EAAGP,KAAK,IAAK;MACnBA,KAAK,CAACN,YAAY,GAAG,EAAE;MACvBM,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC;IAEDW,eAAe,EAAGA,CAACR,KAAK,EAAEE,MAAM,KAAK;MACjCO,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCV,KAAK,CAACN,YAAY,CAACiB,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACzC,IAAID,KAAK,CAACE,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACW,GAAG,EAAE;UAClCd,KAAK,CAACN,YAAY,CAACmB,KAAK,CAAC,GAAGX,MAAM,CAACC,OAAO;QAC9C;MACJ,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACJ,UAAU;EAAEK,WAAW;EAAEH,YAAY;EAAEK,UAAU;EAAEC,UAAU;EAAEC;AAAe,CAAC,GAAGjB,SAAS,CAACwB,OAAO;AACjH,eAAexB,SAAS,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}