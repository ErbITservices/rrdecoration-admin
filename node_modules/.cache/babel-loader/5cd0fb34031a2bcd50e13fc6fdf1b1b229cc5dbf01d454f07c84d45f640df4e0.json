{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from './userRedux';\nimport Products from \"./Products\";\nimport UseersComponentRedux from \"./UseersComponentRedux\";\nimport MessageRedux from \"./MessageRedux\";\nimport AnnoucmentRedux from \"./AnnoucmentRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nexport const store = configureStore({\n  reducer: {\n    user: persistedReducer,\n    users: UseersComponentRedux,\n    Products: Products,\n    error: MessageRedux,\n    announcements: AnnoucmentRedux\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","userReducer","Products","UseersComponentRedux","MessageRedux","AnnoucmentRedux","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","persistedReducer","store","reducer","user","users","error","announcements","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Users/Mihir k/first-react/panara/admin/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from './userRedux'\r\nimport Products from \"./Products\";\r\nimport UseersComponentRedux from \"./UseersComponentRedux\";\r\nimport MessageRedux from \"./MessageRedux\";\r\nimport AnnoucmentRedux from \"./AnnoucmentRedux\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist'\r\n  import storage from 'redux-persist/lib/storage'\r\n\r\n  const persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n  }\r\n  \r\n  const persistedReducer = persistReducer(persistConfig, userReducer)\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        user: persistedReducer,\r\n        users: UseersComponentRedux,\r\n        Products : Products,\r\n        error : MessageRedux,\r\n        announcements : AnnoucmentRedux\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport let persistor = persistStore(store)"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVH;AACF,CAAC;AAED,MAAMI,gBAAgB,GAAGX,cAAc,CAACQ,aAAa,EAAEd,WAAW,CAAC;AAErE,OAAO,MAAMkB,KAAK,GAAGnB,cAAc,CAAC;EAChCoB,OAAO,EAAC;IACJC,IAAI,EAAEH,gBAAgB;IACtBI,KAAK,EAAEnB,oBAAoB;IAC3BD,QAAQ,EAAGA,QAAQ;IACnBqB,KAAK,EAAGnB,YAAY;IACpBoB,aAAa,EAAGnB;EACpB,CAAC;EACDoB,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACpB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAIgB,SAAS,GAAGvB,YAAY,CAACa,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}