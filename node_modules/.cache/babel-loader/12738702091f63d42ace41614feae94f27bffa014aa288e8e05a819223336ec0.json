{"ast":null,"code":"import { req } from \"../../axiosReqMethods\";\nimport { editProduct, addProducts } from \"../Products\";\nimport { setError } from \"../MessageRedux\";\nexport const editProductapi = async (dispatch, product, setIsOpen) => {\n  try {\n    const res = await req.put(`/api/products/${product._id}`, product);\n    dispatch(editProduct(res === null || res === void 0 ? void 0 : res.data));\n    dispatch(setError(\"product updated successfully\"));\n    setIsOpen(false);\n  } catch (error) {\n    dispatch(setError(error.response.data.message));\n    console.log(error);\n  }\n};\nexport const addProductapi = async (dispatch, product, setIsOpen) => {\n  try {\n    const res = await req.post(`/api/products`, product);\n    dispatch(addProducts(res === null || res === void 0 ? void 0 : res.data));\n    dispatch(setError(\"product Added successfully\"));\n    setIsOpen(false);\n  } catch (error) {\n    dispatch(setError(error.response.data.message));\n    console.log(error);\n  }\n};","map":{"version":3,"names":["req","editProduct","addProducts","setError","editProductapi","dispatch","product","setIsOpen","res","put","_id","data","error","response","message","console","log","addProductapi","post"],"sources":["C:/Users/Mihir k/first-react/panara/admin/src/redux/apiCalls/productsApis.js"],"sourcesContent":["import { req } from \"../../axiosReqMethods\";\r\nimport { editProduct, addProducts } from \"../Products\";\r\nimport { setError } from \"../MessageRedux\"\r\n\r\n\r\nexport const editProductapi = async (dispatch, product, setIsOpen) => {\r\n    try {\r\n        const res = await req.put(`/api/products/${product._id}`, product);\r\n        dispatch(editProduct(res?.data))\r\n        dispatch(setError(\"product updated successfully\"))\r\n        setIsOpen(false)\r\n    } catch (error) {\r\n        dispatch(setError(error.response.data.message))\r\n        console.log(error)\r\n    }\r\n}\r\nexport const addProductapi = async (dispatch, product, setIsOpen) => {\r\n    try {\r\n        \r\n        const res = await req.post(`/api/products`, product);\r\n        dispatch(addProducts(res?.data));      \r\n        dispatch(setError(\"product Added successfully\"))\r\n        setIsOpen(false)\r\n    } catch (error) {\r\n        dispatch(setError(error.response.data.message))\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,uBAAuB;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,iBAAiB;AAG1C,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,KAAK;EAClE,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,iBAAiBH,OAAO,CAACI,GAAG,EAAE,EAAEJ,OAAO,CAAC;IAClED,QAAQ,CAACJ,WAAW,CAACO,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,IAAI,CAAC,CAAC;IAChCN,QAAQ,CAACF,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IAClDI,SAAS,CAAC,KAAK,CAAC;EACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZP,QAAQ,CAACF,QAAQ,CAACS,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOZ,QAAQ,EAAEC,OAAO,EAAEC,SAAS,KAAK;EACjE,IAAI;IAEA,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACkB,IAAI,CAAC,eAAe,EAAEZ,OAAO,CAAC;IACpDD,QAAQ,CAACH,WAAW,CAACM,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,IAAI,CAAC,CAAC;IAChCN,QAAQ,CAACF,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IAChDI,SAAS,CAAC,KAAK,CAAC;EACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZP,QAAQ,CAACF,QAAQ,CAACS,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACtB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}